declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8)

define dso_local i32 @foo(i32 %0) {
	%2 = alloca i32 //每个allca的都是一个地址，且只记录alloca的地址（？
	store i32 %0, i32* %2
	%3 = alloca [4 x i32]
	%4 = getelementptr [4 x i32], [4 x i32]* %3, i32 0, i32 0
	store i32 1, i32* %4
	%5 = getelementptr [4 x i32], [4 x i32]* %3, i32 0, i32 1
	store i32 2, i32* %5
	%6 = getelementptr [4 x i32], [4 x i32]* %3, i32 0, i32 2
	store i32 3, i32* %6
	%7 = getelementptr [4 x i32], [4 x i32]* %3, i32 0, i32 3
	store i32 4, i32* %7
	%8 = load i32, i32* %2
	%9 = alloca i32
	store i32 %8, i32* %9
	br label %10

10:	; condBlk 
	%11 = load i32, i32* %9
	%12 = icmp slt i32 %11, 10
	br i1 %12, label %13, label %14

13:	; condSuccessBlk 
	br label %15

14:	; condFailBlk 
	br label %22

15:	; loop 
	%16 = load i32, i32* %9
	%17 = getelementptr [4 x i32], [4 x i32]* %3, i32 0, i32 %16
	%18 = load i32, i32* %17
	call void @putint(i32 %18)
	br label %19

19:	; forStmt2 
	%20 = load i32, i32* %9
	%21 = add i32 %20, 1
	store i32 %21, i32* %9
	br label %10

22:	; loopEnd 
	ret i32 0

}
define dso_local i32 @main() {
	ret i32 0

}

