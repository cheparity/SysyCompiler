declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8)
@a = dso_local global [510 x i32] zeroinitializer
@prime = dso_local global [510 x i32] zeroinitializer
@reflect1 = dso_local constant [16 x i32] [i32 -711942876, i32 -1060809599, i32 1758839997, i32 423174272, i32 1412407466, i32 375872692, i32 1543568839, i32 915987033, i32 698198080, i32 -2143283456, i32 2059223660, i32 -34179219, i32 378910912, i32 1498631475, i32 -1853883889, i32 1640319187]
@reflect2 = dso_local constant [25 x i32] [i32 -1152785601, i32 1891446969, i32 938484211, i32 -1596516698, i32 1681072330, i32 128222498, i32 1090169129, i32 -347746822, i32 -326257601, i32 -1366930863, i32 -823961496, i32 2103453081, i32 -402114823, i32 2139806715, i32 -732814375, i32 1302967469, i32 1623817872, i32 898372270, i32 -812618050, i32 -1403178881, i32 -1776328495, i32 958769364, i32 47496017, i32 -1384738865, i32 1751940200]

define dso_local i32 @main() {
	%1 = alloca i32
	store i32 2, i32* %1
	%2 = alloca i32
	%3 = call i32 @getint()
	store i32 %3, i32* %2
	br label %4

4:	; cond 
	%5 = load i32, i32* %1
	%6 = icmp ne i32 0, %5
	%7 = load i32, i32* %2
	%8 = icmp ne i32 0, %7
	%9 = icmp slt i1 %6, %8
	br i1 %9, label %10, label %15

10:	; forBody loopEnd 
	%11 = load i32, i32* %1
	%12 = getelementptr [510 x i32], [510 x i32]* @a, i32 0, i32 %11
	store i32 1, i32* %12
	%13 = load i32, i32* %1
	%14 = add i32 %13, 1
	store i32 %14, i32* %1
	br label %4

15:	; forEnd beforeFor 
	store i32 2, i32* %1
	%16 = alloca i32
	store i32 0, i32* %16
	br label %17

17:	; cond 
	%18 = load i32, i32* %1
	%19 = icmp ne i32 0, %18
	%20 = load i32, i32* %2
	%21 = icmp ne i32 0, %20
	%22 = icmp slt i1 %19, %21
	br i1 %22, label %23, label %73

23:	; forBody 
	%24 = load i32, i32* %1
	%25 = getelementptr [510 x i32], [510 x i32]* @a, i32 0, i32 %24
	%26 = load i32, i32* %25
	%27 = icmp ne i32 0, %26
	br i1 %27, label %28, label %34

28:	; ifTrue 
	%29 = load i32, i32* %16
	%30 = getelementptr [510 x i32], [510 x i32]* @prime, i32 0, i32 %29
	%31 = load i32, i32* %1
	store i32 %31, i32* %30
	%32 = load i32, i32* %16
	%33 = add i32 %32, 1
	store i32 %33, i32* %16
	br label %34

34:	; ifEnd beforeFor 
	%35 = alloca i32
	store i32 0, i32* %35
	br label %36

36:	; cond 
	%37 = load i32, i32* %35
	%38 = icmp ne i32 0, %37
	%39 = load i32, i32* %16
	%40 = icmp ne i32 0, %39
	%41 = icmp slt i1 %38, %40
	%42 = load i32, i32* %1
	%43 = load i32, i32* %35
	%44 = getelementptr [510 x i32], [510 x i32]* @prime, i32 0, i32 %43
	%45 = load i32, i32* %44
	%46 = mul i32 %42, %45
	%47 = icmp ne i32 0, %46
	%48 = load i32, i32* %2
	%49 = icmp ne i32 0, %48
	%50 = icmp sle i1 %47, %49
	%51 = and i1 %41, %50
	br i1 %51, label %52, label %70

52:	; forBody 
	%53 = load i32, i32* %1
	%54 = load i32, i32* %35
	%55 = getelementptr [510 x i32], [510 x i32]* @prime, i32 0, i32 %54
	%56 = load i32, i32* %55
	%57 = mul i32 %53, %56
	%58 = getelementptr [510 x i32], [510 x i32]* @a, i32 0, i32 %57
	store i32 0, i32* %58
	%59 = load i32, i32* %1
	%60 = load i32, i32* %35
	%61 = getelementptr [510 x i32], [510 x i32]* @prime, i32 0, i32 %60
	%62 = load i32, i32* %61
	%63 = srem i32 %59, %62
	%64 = icmp ne i32 0, %63
	%65 = icmp eq i1 %64, 0
	br i1 %65, label %66, label %67

66:	; ifTrue 
	br label %67

67:	; ifEnd loopEnd 
	%68 = load i32, i32* %35
	%69 = add i32 %68, 1
	store i32 %69, i32* %35
	br label %36

70:	; forEnd loopEnd 
	%71 = load i32, i32* %1
	%72 = add i32 %71, 1
	store i32 %72, i32* %1
	br label %17

73:	; forEnd beforeFor 
	store i32 0, i32* %1
	br label %74

74:	; cond 
	br i1 1, label %75, label %113

75:	; forBody 
	%76 = load i32, i32* %1
	%77 = getelementptr [510 x i32], [510 x i32]* @a, i32 0, i32 %76
	%78 = load i32, i32* %77
	%79 = icmp ne i32 0, %78
	br i1 %79, label %80, label %102

80:	; ifTrue 
	%81 = load i32, i32* %1
	%82 = load i32, i32* %1
	%83 = srem i32 %82, 2
	%84 = load i32, i32* %1
	%85 = srem i32 %84, 16
	%86 = getelementptr [16 x i32], [16 x i32]* @reflect1, i32 0, i32 %85
	%87 = load i32, i32* %86
	%88 = mul i32 %83, %87
	%89 = load i32, i32* %1
	%90 = add i32 %89, 1
	%91 = srem i32 %90, 2
	%92 = load i32, i32* %1
	%93 = srem i32 %92, 5
	%94 = load i32, i32* %1
	%95 = srem i32 %94, 5
	%96 = mul i32 %95, 5
	%97 = add i32 %93, %96
	%98 = getelementptr [25 x i32], [25 x i32]* @reflect2, i32 0, i32 %97
	%99 = load i32, i32* %98
	%100 = mul i32 %91, %99
	%101 = add i32 %88, %100
	call void @putint(i32 %81)
	call void @putch(i32 32)
	call void @putint(i32 %101)
	call void @putch(i32 10)
	br label %102

102:	; ifEnd 
	%103 = load i32, i32* %1
	%104 = add i32 %103, 1
	store i32 %104, i32* %1
	%105 = load i32, i32* %1
	%106 = icmp ne i32 0, %105
	%107 = load i32, i32* %2
	%108 = icmp ne i32 0, %107
	%109 = icmp slt i1 %106, %108
	br i1 %109, label %110, label %111

110:	; ifTrue 
	br label %111

111:	; else 
	br label %112

112:	; ifEnd loopEnd 
	br label %74

113:	; forEnd 
	ret i32 0

}

