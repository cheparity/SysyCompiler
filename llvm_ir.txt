declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8)
@_a = dso_local constant i32 0
@HelLo_World = dso_local constant [5 x i32] [i32 1, i32 55, i32 0, i32 10, i32 9999]
@a_r__r = dso_local constant [4 x i32] [i32 -1, i32 0, i32 6, i32 -555]
@_A = dso_local constant i32 6
@B = dso_local constant [1 x i32] [i32 9966]
@_ = dso_local constant i32 12
@c = dso_local constant [1 x i32] [i32 555]
@__ = dso_local constant i32 4
@con_6 = dso_local constant [2 x i32] [i32 0, i32 6]
@lll = dso_local constant i32 1
@rrr = dso_local constant i32 2
@awk_ = dso_local constant i32 11
@const_num = dso_local constant i32 5
@yyy = dso_local constant [6 x i32] [i32 1, i32 0, i32 2, i32 -1, i32 3, i32 -4]
@var_1 = dso_local global i32 zeroinitializer
@var_2 = dso_local global [100 x i32] zeroinitializer
@var_3 = dso_local global [24 x i32] zeroinitializer
@varr_1 = dso_local global i32 zeroinitializer
@varr_2 = dso_local global i32 10
@varr_3 = dso_local global [2 x i32] zeroinitializer
@varr_4 = dso_local global [4995 x i32] zeroinitializer
@varrr_1 = dso_local global i32 10
@varrr_2 = dso_local global [2 x i32] [i32 1, i32 2]
@varrr_3 = dso_local global [4 x i32] [i32 6, i32 6, i32 -1, i32 0]
@varrrr_1 = dso_local global i32 666
@varrrr_2 = dso_local global i32 zeroinitializer
@varrrr_3 = dso_local global [5 x i32] [i32 1, i32 5, i32 1, i32 96, i32 -5]
@varrrr_4 = dso_local global [2 x i32] [i32 555, i32 -5]

define dso_local void @func1(i32 %0) {
	%2 = alloca i32
	store i32 %0, i32* %2
	%3 = alloca i32
	store i32 1, i32* %3
	%4 = alloca i32
	store i32 2, i32* %4
	ret void

}
define dso_local i32 @func2(i32 %0, i32* %1) {
	%3 = alloca i32
	store i32 %0, i32* %3
	%4 = alloca i32*
	store i32* %1, i32** %4
	store i32 5, i32* %3
	%5 = load i32*, i32** %4
	%6 = getelementptr i32, i32* %5, i32 0
	store i32 46554646, i32* %6
	%7 = load i32, i32* %3
	%8 = icmp eq i32 %7, 5
	br i1 %8, label %9, label %10

9:	; ifTrue 
	br label %10

10:	; ifEnd 
	%11 = load i32, i32* %3
	%12 = icmp slt i32 %11, 10
	br i1 %12, label %13, label %14

13:	; ifTrue 
	store i32 1000, i32* %3
	br label %18

14:	; else 
	%15 = load i32*, i32** %4
	%16 = getelementptr i32, i32* %15, i32 1
	%17 = load i32, i32* %16
	store i32 %17, i32* %3
	br label %18

18:	; ifEnd 
	ret i32 666

}
define dso_local void @func3(i32* %0) {
	%2 = alloca i32*
	store i32* %0, i32** %2
	%3 = alloca i32
	store i32 0, i32* %3
	%4 = load i32*, i32** %2
	%5 = getelementptr i32, i32* %4, i32 0
	%6 = load i32, i32* %5
	%7 = icmp sgt i32 %6, 10
	br i1 %7, label %8, label %9

8:	; ifTrue 
	ret void

9:	; else 
	br label %10

10:	; ifEnd beforeFor 
	br label %11

11:	; cond 
	%12 = load i32, i32* %3
	%13 = icmp slt i32 %12, 100
	br i1 %13, label %14, label %24

14:	; forBody 
	%15 = load i32, i32* %3
	%16 = icmp eq i32 %15, 50
	br i1 %16, label %17, label %20

17:	; ifTrue 
	%18 = load i32*, i32** %2
	%19 = getelementptr i32, i32* %18, i32 0
	store i32 1, i32* %19
	ret void

20:	; else 
	%21 = load i32, i32* %3
	%22 = add i32 %21, 1
	store i32 %22, i32* %3

23:	; ifEnd loopEnd 
	br label %11

24:	; forEnd 
	ret void

}
define dso_local i32 @func4(i32 %0, i32* %1, i32* %2) {
	%4 = alloca i32
	store i32 %0, i32* %4
	%5 = alloca i32*
	store i32* %1, i32** %5
	%6 = alloca i32*
	store i32* %2, i32** %6
	%7 = load i32, i32* %4
	%8 = load i32*, i32** %5
	%9 = getelementptr i32, i32* %8, i32 0
	%10 = load i32, i32* %9
	%11 = load i32*, i32** %6
	%12 = getelementptr i32, i32* %11, i32 1
	%13 = load i32, i32* %12
	%14 = load i32, i32* %4
	%15 = load i32*, i32** %5
	%16 = getelementptr i32, i32* %15, i32 1
	%17 = load i32, i32* %16
	%18 = add i32 %14, %17
	%19 = load i32*, i32** %6
	%20 = getelementptr i32, i32* %19, i32 0
	%21 = load i32, i32* %20
	%22 = add i32 %18, %21
	%23 = load i32, i32* %4
	%24 = add i32 1, %23
	%25 = sub i32 0, %24
	%26 = load i32, i32* %4
	%27 = add i32 1, %26
	%28 = add i32 %27, 44
	%29 = add i32 %28, 3
	%30 = add i32 %25, %29
	%31 = load i32, i32* %4
	%32 = mul i32 6, %31
	ret i32 999

}
define dso_local i32 @func5() {
	ret i32 5464
	ret i32 -555

}
define dso_local i32 @main() {
	%1 = alloca [6 x i32]
	%2 = load i32, i32* @varrrr_1
	%3 = sdiv i32 5555, %2
	%4 = getelementptr [6 x i32], [6 x i32]* %1, i32 0, i32 0
	store i32 0, i32* %4
	%5 = getelementptr [6 x i32], [6 x i32]* %1, i32 0, i32 1
	store i32 16, i32* %5
	%6 = getelementptr [6 x i32], [6 x i32]* %1, i32 0, i32 2
	store i32 3, i32* %6
	%7 = getelementptr [6 x i32], [6 x i32]* %1, i32 0, i32 3
	store i32 678, i32* %7
	%8 = getelementptr [6 x i32], [6 x i32]* %1, i32 0, i32 4
	store i32 %3, i32* %8
	%9 = getelementptr [6 x i32], [6 x i32]* %1, i32 0, i32 5
	store i32 0, i32* %9
	%10 = alloca [4 x i32]
	%11 = getelementptr [6 x i32], [6 x i32]* %1, i32 0, i32 0
	%12 = load i32, i32* %11
	%13 = mul i32 6, %12
	%14 = getelementptr [4 x i32], [4 x i32]* %10, i32 0, i32 0
	store i32 0, i32* %14
	%15 = getelementptr [4 x i32], [4 x i32]* %10, i32 0, i32 1
	store i32 %13, i32* %15
	%16 = getelementptr [4 x i32], [4 x i32]* %10, i32 0, i32 2
	store i32 5555, i32* %16
	%17 = getelementptr [4 x i32], [4 x i32]* %10, i32 0, i32 3
	store i32 -27, i32* %17
	%18 = alloca i32
	%19 = alloca i32
	%20 = call i32 @getint()
	store i32 %20, i32* %18
	%21 = load i32, i32* @varr_2
	call void @func1(i32 %21)
	%22 = getelementptr [6 x i32], [6 x i32]* %1, i32 0, i32 5
	%23 = call i32 @getint()
	store i32 %23, i32* %22
	%24 = getelementptr [6 x i32], [6 x i32]* %1, i32 0, i32 3
	%25 = call i32 @func2(i32 111, i32* %24)
	%26 = getelementptr [6 x i32], [6 x i32]* %1, i32 0, i32 0
	call void @func3(i32* %26)
	%27 = getelementptr [4 x i32], [4 x i32]* %10, i32 0, i32 1
	%28 = call i32 @getint()
	store i32 %28, i32* %27
	%29 = load i32, i32* %18
	%30 = getelementptr [4 x i32], [4 x i32]* %10, i32 0, i32 0
	%31 = getelementptr [6 x i32], [6 x i32]* %1, i32 0, i32 0
	%32 = call i32 @func4(i32 %29, i32* %30, i32* %31)
	%33 = call i32 @func5()
	call void @putint(i32 1)
	call void @putch(i32 10)
	call void @putint(i32 1)
	call void @putch(i32 10)
	call void @putint(i32 1)
	call void @putch(i32 10)
	call void @putint(i32 1)
	call void @putch(i32 10)
	call void @putint(i32 1)
	call void @putch(i32 10)
	call void @putint(i32 1)
	call void @putch(i32 10)
	call void @putint(i32 1)
	call void @putch(i32 10)
	call void @putint(i32 1)
	call void @putch(i32 10)
	call void @putint(i32 1)
	call void @putch(i32 10)
	ret i32 0

}

