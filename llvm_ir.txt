declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8)
@a = dso_local global [510 x i32] zeroinitializer
@prime = dso_local global [510 x i32] zeroinitializer
@reflect1 = dso_local constant [16 x i32] [i32 -711942876, i32 -1060809599, i32 1758839997, i32 423174272, i32 1412407466, i32 375872692, i32 1543568839, i32 915987033, i32 698198080, i32 -2143283456, i32 2059223660, i32 -34179219, i32 378910912, i32 1498631475, i32 -1853883889, i32 1640319187]
@reflect2 = dso_local constant [25 x i32] [i32 -1152785601, i32 1891446969, i32 938484211, i32 -1596516698, i32 1681072330, i32 128222498, i32 1090169129, i32 -347746822, i32 -326257601, i32 -1366930863, i32 -823961496, i32 2103453081, i32 -402114823, i32 2139806715, i32 -732814375, i32 1302967469, i32 1623817872, i32 898372270, i32 -812618050, i32 -1403178881, i32 -1776328495, i32 958769364, i32 47496017, i32 -1384738865, i32 1751940200]

define dso_local i32 @main() {
	%1 = alloca i32
	store i32 2, i32* %1
	%2 = alloca i32
	%3 = call i32 @getint()
	store i32 %3, i32* %2
	br label %4

4:	; cond 
	%5 = load i32, i32* %1
	%6 = load i32, i32* %2
	%7 = icmp slt i32 %5, %6
	br i1 %7, label %8, label %14

8:	; forBody loopEnd 
	%9 = load i32, i32* %1
	%10 = getelementptr [510 x i32], [510 x i32]* @a, i32 0, i32 %9
	store i32 1, i32* %10
	%11 = load i32, i32* %1
	%12 = add i32 %11, 1
	store i32 %12, i32* %1
	br label %13

13:	; forStmt2 
	br label %4

14:	; forEnd beforeFor 
	store i32 2, i32* %1
	%15 = alloca i32
	store i32 0, i32* %15
	br label %16

16:	; cond 
	%17 = load i32, i32* %1
	%18 = load i32, i32* %2
	%19 = icmp slt i32 %17, %18
	br i1 %19, label %20, label %67

20:	; forBody 
	%21 = load i32, i32* %1
	%22 = getelementptr [510 x i32], [510 x i32]* @a, i32 0, i32 %21
	%23 = load i32, i32* %22
	%24 = icmp ne i32 0, %23
	br i1 %24, label %25, label %31

25:	; ifTrue 
	%26 = load i32, i32* %15
	%27 = getelementptr [510 x i32], [510 x i32]* @prime, i32 0, i32 %26
	%28 = load i32, i32* %1
	store i32 %28, i32* %27
	%29 = load i32, i32* %15
	%30 = add i32 %29, 1
	store i32 %30, i32* %15
	br label %31

31:	; ifEnd beforeFor 
	%32 = alloca i32
	store i32 0, i32* %32
	br label %33

33:	; cond 
	%34 = load i32, i32* %32
	%35 = load i32, i32* %15
	%36 = icmp slt i32 %34, %35
	%37 = load i32, i32* %1
	%38 = load i32, i32* %32
	%39 = getelementptr [510 x i32], [510 x i32]* @prime, i32 0, i32 %38
	%40 = load i32, i32* %39
	%41 = mul i32 %37, %40
	%42 = load i32, i32* %2
	%43 = icmp sle i32 %41, %42
	%44 = and i1 %36, %43
	br i1 %44, label %45, label %63

45:	; forBody 
	%46 = load i32, i32* %1
	%47 = load i32, i32* %32
	%48 = getelementptr [510 x i32], [510 x i32]* @prime, i32 0, i32 %47
	%49 = load i32, i32* %48
	%50 = mul i32 %46, %49
	%51 = getelementptr [510 x i32], [510 x i32]* @a, i32 0, i32 %50
	store i32 0, i32* %51
	%52 = load i32, i32* %1
	%53 = load i32, i32* %32
	%54 = getelementptr [510 x i32], [510 x i32]* @prime, i32 0, i32 %53
	%55 = load i32, i32* %54
	%56 = srem i32 %52, %55
	%57 = icmp eq i32 %56, 0
	br i1 %57, label %58, label %59

58:	; ifTrue 
	br label %63

59:	; ifEnd loopEnd 
	%60 = load i32, i32* %32
	%61 = add i32 %60, 1
	store i32 %61, i32* %32
	br label %62

62:	; forStmt2 
	br label %33

63:	; forEnd loopEnd 
	%64 = load i32, i32* %1
	%65 = add i32 %64, 1
	store i32 %65, i32* %1
	br label %66

66:	; forStmt2 
	br label %16

67:	; forEnd beforeFor 
	store i32 0, i32* %1
	br label %68

68:	; cond 
	br i1 1, label %69, label %106

69:	; forBody 
	%70 = load i32, i32* %1
	%71 = getelementptr [510 x i32], [510 x i32]* @a, i32 0, i32 %70
	%72 = load i32, i32* %71
	%73 = icmp ne i32 0, %72
	br i1 %73, label %74, label %96

74:	; ifTrue 
	%75 = load i32, i32* %1
	%76 = load i32, i32* %1
	%77 = srem i32 %76, 2
	%78 = load i32, i32* %1
	%79 = srem i32 %78, 16
	%80 = getelementptr [16 x i32], [16 x i32]* @reflect1, i32 0, i32 %79
	%81 = load i32, i32* %80
	%82 = mul i32 %77, %81
	%83 = load i32, i32* %1
	%84 = add i32 %83, 1
	%85 = srem i32 %84, 2
	%86 = load i32, i32* %1
	%87 = srem i32 %86, 5
	%88 = load i32, i32* %1
	%89 = srem i32 %88, 5
	%90 = mul i32 %89, 5
	%91 = add i32 %87, %90
	%92 = getelementptr [25 x i32], [25 x i32]* @reflect2, i32 0, i32 %91
	%93 = load i32, i32* %92
	%94 = mul i32 %85, %93
	%95 = add i32 %82, %94
	call void @putint(i32 %75)
	call void @putch(i32 32)
	call void @putint(i32 %95)
	call void @putch(i32 10)
	br label %96

96:	; ifEnd 
	%97 = load i32, i32* %1
	%98 = add i32 %97, 1
	store i32 %98, i32* %1
	%99 = load i32, i32* %1
	%100 = load i32, i32* %2
	%101 = icmp slt i32 %99, %100
	br i1 %101, label %102, label %103

102:	; ifTrue 
	br label %105

103:	; else 
	br label %106

104:	; ifEnd loopEnd 
	br label %105

105:	; forStmt2 
	br label %68

106:	; forEnd 
	ret i32 0

}

